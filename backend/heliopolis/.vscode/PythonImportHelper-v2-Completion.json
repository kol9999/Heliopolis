[
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "JsonResponse",
        "importPath": "django.http",
        "description": "django.http",
        "isExtraImport": true,
        "detail": "django.http",
        "documentation": {}
    },
    {
        "label": "JsonResponse",
        "importPath": "django.http",
        "description": "django.http",
        "isExtraImport": true,
        "detail": "django.http",
        "documentation": {}
    },
    {
        "label": "APIView",
        "importPath": "rest_framework.views",
        "description": "rest_framework.views",
        "isExtraImport": true,
        "detail": "rest_framework.views",
        "documentation": {}
    },
    {
        "label": "APIView",
        "importPath": "rest_framework.views",
        "description": "rest_framework.views",
        "isExtraImport": true,
        "detail": "rest_framework.views",
        "documentation": {}
    },
    {
        "label": "APIView",
        "importPath": "rest_framework.views",
        "description": "rest_framework.views",
        "isExtraImport": true,
        "detail": "rest_framework.views",
        "documentation": {}
    },
    {
        "label": "Response",
        "importPath": "rest_framework.response",
        "description": "rest_framework.response",
        "isExtraImport": true,
        "detail": "rest_framework.response",
        "documentation": {}
    },
    {
        "label": "Response",
        "importPath": "rest_framework.response",
        "description": "rest_framework.response",
        "isExtraImport": true,
        "detail": "rest_framework.response",
        "documentation": {}
    },
    {
        "label": "Response",
        "importPath": "rest_framework.response",
        "description": "rest_framework.response",
        "isExtraImport": true,
        "detail": "rest_framework.response",
        "documentation": {}
    },
    {
        "label": "status",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "serializers",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "viewsets",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "serializers",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "status",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "serializers",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "status",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "routers",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "StudentCreateSerializer",
        "importPath": "api.students.serializers",
        "description": "api.students.serializers",
        "isExtraImport": true,
        "detail": "api.students.serializers",
        "documentation": {}
    },
    {
        "label": "StudentCreateSerializer",
        "importPath": "api.students.serializers",
        "description": "api.students.serializers",
        "isExtraImport": true,
        "detail": "api.students.serializers",
        "documentation": {}
    },
    {
        "label": "Otp",
        "importPath": "apps.otp.models",
        "description": "apps.otp.models",
        "isExtraImport": true,
        "detail": "apps.otp.models",
        "documentation": {}
    },
    {
        "label": "Otp",
        "importPath": "apps.otp.models",
        "description": "apps.otp.models",
        "isExtraImport": true,
        "detail": "apps.otp.models",
        "documentation": {}
    },
    {
        "label": "Otp",
        "importPath": "apps.otp.models",
        "description": "apps.otp.models",
        "isExtraImport": true,
        "detail": "apps.otp.models",
        "documentation": {}
    },
    {
        "label": "Otp",
        "importPath": "apps.otp.models",
        "description": "apps.otp.models",
        "isExtraImport": true,
        "detail": "apps.otp.models",
        "documentation": {}
    },
    {
        "label": "django.db",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.db",
        "description": "django.db",
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "transaction",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "transaction",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "transaction",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "Token",
        "importPath": "rest_framework.authtoken.models",
        "description": "rest_framework.authtoken.models",
        "isExtraImport": true,
        "detail": "rest_framework.authtoken.models",
        "documentation": {}
    },
    {
        "label": "Token",
        "importPath": "rest_framework.authtoken.models",
        "description": "rest_framework.authtoken.models",
        "isExtraImport": true,
        "detail": "rest_framework.authtoken.models",
        "documentation": {}
    },
    {
        "label": "Student",
        "importPath": "apps.student.models",
        "description": "apps.student.models",
        "isExtraImport": true,
        "detail": "apps.student.models",
        "documentation": {}
    },
    {
        "label": "Student",
        "importPath": "apps.student.models",
        "description": "apps.student.models",
        "isExtraImport": true,
        "detail": "apps.student.models",
        "documentation": {}
    },
    {
        "label": "Student",
        "importPath": "apps.student.models",
        "description": "apps.student.models",
        "isExtraImport": true,
        "detail": "apps.student.models",
        "documentation": {}
    },
    {
        "label": "Student",
        "importPath": "apps.student.models",
        "description": "apps.student.models",
        "isExtraImport": true,
        "detail": "apps.student.models",
        "documentation": {}
    },
    {
        "label": "Instructor",
        "importPath": "apps.instructor.models",
        "description": "apps.instructor.models",
        "isExtraImport": true,
        "detail": "apps.instructor.models",
        "documentation": {}
    },
    {
        "label": "Instructor",
        "importPath": "apps.instructor.models",
        "description": "apps.instructor.models",
        "isExtraImport": true,
        "detail": "apps.instructor.models",
        "documentation": {}
    },
    {
        "label": "Instructor",
        "importPath": "apps.instructor.models",
        "description": "apps.instructor.models",
        "isExtraImport": true,
        "detail": "apps.instructor.models",
        "documentation": {}
    },
    {
        "label": "Instructor",
        "importPath": "apps.instructor.models",
        "description": "apps.instructor.models",
        "isExtraImport": true,
        "detail": "apps.instructor.models",
        "documentation": {}
    },
    {
        "label": "Instructor",
        "importPath": "apps.instructor.models",
        "description": "apps.instructor.models",
        "isExtraImport": true,
        "detail": "apps.instructor.models",
        "documentation": {}
    },
    {
        "label": "CustomUser",
        "importPath": "apps.common.models",
        "description": "apps.common.models",
        "isExtraImport": true,
        "detail": "apps.common.models",
        "documentation": {}
    },
    {
        "label": "TimeStampAndVisibility",
        "importPath": "apps.common.models",
        "description": "apps.common.models",
        "isExtraImport": true,
        "detail": "apps.common.models",
        "documentation": {}
    },
    {
        "label": "CustomUser",
        "importPath": "apps.common.models",
        "description": "apps.common.models",
        "isExtraImport": true,
        "detail": "apps.common.models",
        "documentation": {}
    },
    {
        "label": "TimeStampAndVisibility",
        "importPath": "apps.common.models",
        "description": "apps.common.models",
        "isExtraImport": true,
        "detail": "apps.common.models",
        "documentation": {}
    },
    {
        "label": "CustomUser",
        "importPath": "apps.common.models",
        "description": "apps.common.models",
        "isExtraImport": true,
        "detail": "apps.common.models",
        "documentation": {}
    },
    {
        "label": "TimeStampAndVisibility",
        "importPath": "apps.common.models",
        "description": "apps.common.models",
        "isExtraImport": true,
        "detail": "apps.common.models",
        "documentation": {}
    },
    {
        "label": "CustomUser",
        "importPath": "apps.common.models",
        "description": "apps.common.models",
        "isExtraImport": true,
        "detail": "apps.common.models",
        "documentation": {}
    },
    {
        "label": "TimeStampAndVisibility",
        "importPath": "apps.common.models",
        "description": "apps.common.models",
        "isExtraImport": true,
        "detail": "apps.common.models",
        "documentation": {}
    },
    {
        "label": "CustomUser",
        "importPath": "apps.common.models",
        "description": "apps.common.models",
        "isExtraImport": true,
        "detail": "apps.common.models",
        "documentation": {}
    },
    {
        "label": "Chapter",
        "importPath": "apps.course.models",
        "description": "apps.course.models",
        "isExtraImport": true,
        "detail": "apps.course.models",
        "documentation": {}
    },
    {
        "label": "Course",
        "importPath": "apps.course.models",
        "description": "apps.course.models",
        "isExtraImport": true,
        "detail": "apps.course.models",
        "documentation": {}
    },
    {
        "label": "Lesson",
        "importPath": "apps.course.models",
        "description": "apps.course.models",
        "isExtraImport": true,
        "detail": "apps.course.models",
        "documentation": {}
    },
    {
        "label": "Chapter",
        "importPath": "apps.course.models",
        "description": "apps.course.models",
        "isExtraImport": true,
        "detail": "apps.course.models",
        "documentation": {}
    },
    {
        "label": "Course",
        "importPath": "apps.course.models",
        "description": "apps.course.models",
        "isExtraImport": true,
        "detail": "apps.course.models",
        "documentation": {}
    },
    {
        "label": "Lesson",
        "importPath": "apps.course.models",
        "description": "apps.course.models",
        "isExtraImport": true,
        "detail": "apps.course.models",
        "documentation": {}
    },
    {
        "label": "Chapter",
        "importPath": "apps.course.models",
        "description": "apps.course.models",
        "isExtraImport": true,
        "detail": "apps.course.models",
        "documentation": {}
    },
    {
        "label": "Course",
        "importPath": "apps.course.models",
        "description": "apps.course.models",
        "isExtraImport": true,
        "detail": "apps.course.models",
        "documentation": {}
    },
    {
        "label": "Lesson",
        "importPath": "apps.course.models",
        "description": "apps.course.models",
        "isExtraImport": true,
        "detail": "apps.course.models",
        "documentation": {}
    },
    {
        "label": "ChapterSerializer",
        "importPath": "api.course.serializers",
        "description": "api.course.serializers",
        "isExtraImport": true,
        "detail": "api.course.serializers",
        "documentation": {}
    },
    {
        "label": "CourseSerializer",
        "importPath": "api.course.serializers",
        "description": "api.course.serializers",
        "isExtraImport": true,
        "detail": "api.course.serializers",
        "documentation": {}
    },
    {
        "label": "LessonSerializer",
        "importPath": "api.course.serializers",
        "description": "api.course.serializers",
        "isExtraImport": true,
        "detail": "api.course.serializers",
        "documentation": {}
    },
    {
        "label": "IsAuthenticated",
        "importPath": "rest_framework.permissions",
        "description": "rest_framework.permissions",
        "isExtraImport": true,
        "detail": "rest_framework.permissions",
        "documentation": {}
    },
    {
        "label": "PermissionDenied",
        "importPath": "rest_framework.exceptions",
        "description": "rest_framework.exceptions",
        "isExtraImport": true,
        "detail": "rest_framework.exceptions",
        "documentation": {}
    },
    {
        "label": "InstructorCreateSerializer",
        "importPath": "api.instructor.serializers",
        "description": "api.instructor.serializers",
        "isExtraImport": true,
        "detail": "api.instructor.serializers",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "include",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "include",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "RegisterStudent",
        "importPath": "api.students.views",
        "description": "api.students.views",
        "isExtraImport": true,
        "detail": "api.students.views",
        "documentation": {}
    },
    {
        "label": "TestAPIView",
        "importPath": "api.students.views",
        "description": "api.students.views",
        "isExtraImport": true,
        "detail": "api.students.views",
        "documentation": {}
    },
    {
        "label": "RegisterInstructor",
        "importPath": "api.instructor.views",
        "description": "api.instructor.views",
        "isExtraImport": true,
        "detail": "api.instructor.views",
        "documentation": {}
    },
    {
        "label": "Login",
        "importPath": "api.common.views",
        "description": "api.common.views",
        "isExtraImport": true,
        "detail": "api.common.views",
        "documentation": {}
    },
    {
        "label": "OtpValidation",
        "importPath": "api.common.views",
        "description": "api.common.views",
        "isExtraImport": true,
        "detail": "api.common.views",
        "documentation": {}
    },
    {
        "label": "ChapterViewSet",
        "importPath": "api.course.views",
        "description": "api.course.views",
        "isExtraImport": true,
        "detail": "api.course.views",
        "documentation": {}
    },
    {
        "label": "CourseViewSet",
        "importPath": "api.course.views",
        "description": "api.course.views",
        "isExtraImport": true,
        "detail": "api.course.views",
        "documentation": {}
    },
    {
        "label": "LessonViewSet",
        "importPath": "api.course.views",
        "description": "api.course.views",
        "isExtraImport": true,
        "detail": "api.course.views",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "django.contrib.auth.models",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "AbstractUser",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "AbstractUser",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "Group",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "AbstractUser",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "Group",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "django.contrib.auth.validators",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.contrib.auth.validators",
        "description": "django.contrib.auth.validators",
        "detail": "django.contrib.auth.validators",
        "documentation": {}
    },
    {
        "label": "django.db.models.deletion",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.db.models.deletion",
        "description": "django.db.models.deletion",
        "detail": "django.db.models.deletion",
        "documentation": {}
    },
    {
        "label": "django.utils.timezone",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.utils.timezone",
        "description": "django.utils.timezone",
        "detail": "django.utils.timezone",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "uuid",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "uuid",
        "description": "uuid",
        "detail": "uuid",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "SET_NULL",
        "importPath": "django.db.models",
        "description": "django.db.models",
        "isExtraImport": true,
        "detail": "django.db.models",
        "documentation": {}
    },
    {
        "label": "slugify",
        "importPath": "django.utils.text",
        "description": "django.utils.text",
        "isExtraImport": true,
        "detail": "django.utils.text",
        "documentation": {}
    },
    {
        "label": "os",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "os",
        "description": "os",
        "detail": "os",
        "documentation": {}
    },
    {
        "label": "get_asgi_application",
        "importPath": "django.core.asgi",
        "description": "django.core.asgi",
        "isExtraImport": true,
        "detail": "django.core.asgi",
        "documentation": {}
    },
    {
        "label": "Path",
        "importPath": "pathlib",
        "description": "pathlib",
        "isExtraImport": true,
        "detail": "pathlib",
        "documentation": {}
    },
    {
        "label": "get_wsgi_application",
        "importPath": "django.core.wsgi",
        "description": "django.core.wsgi",
        "isExtraImport": true,
        "detail": "django.core.wsgi",
        "documentation": {}
    },
    {
        "label": "sys",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "sys",
        "description": "sys",
        "detail": "sys",
        "documentation": {}
    },
    {
        "label": "OtpValidation",
        "kind": 6,
        "importPath": "api.common.views",
        "description": "api.common.views",
        "peekOfCode": "class OtpValidation(APIView):\n    def post(self, request):\n        data = request.data\n        try:\n            email = request.data['email']\n        except:\n            return Response({'message': 'email needed'}, status=status.HTTP_400_BAD_REQUEST,)\n        try:\n            otp = request.data['otp']\n        except:",
        "detail": "api.common.views",
        "documentation": {}
    },
    {
        "label": "Login",
        "kind": 6,
        "importPath": "api.common.views",
        "description": "api.common.views",
        "peekOfCode": "class Login(APIView):\n    def post(self, request):\n        data = request.data\n        try:\n            email = request.data['email']\n        except:\n            return Response({'message': 'email needed'}, status=status.HTTP_400_BAD_REQUEST,)\n        try:\n            password = request.data['password']\n        except:",
        "detail": "api.common.views",
        "documentation": {}
    },
    {
        "label": "CourseSerializer",
        "kind": 6,
        "importPath": "api.course.serializers",
        "description": "api.course.serializers",
        "peekOfCode": "class CourseSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Course\n        fields = '__all__'\nclass ChapterSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Chapter\n        fields = '__all__'\nclass LessonSerializer(serializers.ModelSerializer):\n    class Meta:",
        "detail": "api.course.serializers",
        "documentation": {}
    },
    {
        "label": "ChapterSerializer",
        "kind": 6,
        "importPath": "api.course.serializers",
        "description": "api.course.serializers",
        "peekOfCode": "class ChapterSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Chapter\n        fields = '__all__'\nclass LessonSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Lesson\n        fields = '__all__'",
        "detail": "api.course.serializers",
        "documentation": {}
    },
    {
        "label": "LessonSerializer",
        "kind": 6,
        "importPath": "api.course.serializers",
        "description": "api.course.serializers",
        "peekOfCode": "class LessonSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Lesson\n        fields = '__all__'",
        "detail": "api.course.serializers",
        "documentation": {}
    },
    {
        "label": "CourseViewSet",
        "kind": 6,
        "importPath": "api.course.views",
        "description": "api.course.views",
        "peekOfCode": "class CourseViewSet(viewsets.ModelViewSet):\n    serializer_class = CourseSerializer\n    permission_classes = (IsAuthenticated,)\n    http_method_names = [\"get\", \"patch\"]\n    # queryset = Course.objects.select_related('category', 'owner').all()\n    def get_queryset(self):\n        user = self.request.user\n        return Course.objects.filter(owner=user).select_related('category', 'owner')\n    def perform_update(self, serializer):\n        # Retrieve the current user",
        "detail": "api.course.views",
        "documentation": {}
    },
    {
        "label": "ChapterViewSet",
        "kind": 6,
        "importPath": "api.course.views",
        "description": "api.course.views",
        "peekOfCode": "class ChapterViewSet(viewsets.ModelViewSet):\n    serializer_class = ChapterSerializer\n    permission_classes = (IsAuthenticated,)\n    http_method_names = [\"get\", \"patch\"]\n    # queryset = Course.objects.select_related('category', 'owner').all()\n    def get_queryset(self):\n        user = self.request.user\n        return Chapter.objects.filter(course__owner=user).select_related('course')\n    def perform_update(self, serializer):\n        # Retrieve the current user",
        "detail": "api.course.views",
        "documentation": {}
    },
    {
        "label": "LessonViewSet",
        "kind": 6,
        "importPath": "api.course.views",
        "description": "api.course.views",
        "peekOfCode": "class LessonViewSet(viewsets.ModelViewSet):\n    serializer_class = LessonSerializer\n    permission_classes = (IsAuthenticated,)\n    http_method_names = [\"get\", \"patch\"]\n    # queryset = Course.objects.select_related('category', 'owner').all()\n    def get_queryset(self):\n        user = self.request.user\n        return Lesson.objects.filter(chapter__course__owner=user).select_related('chapter')\n    def perform_update(self, serializer):\n        # Retrieve the current user",
        "detail": "api.course.views",
        "documentation": {}
    },
    {
        "label": "InstructorCreateSerializer",
        "kind": 6,
        "importPath": "api.instructor.serializers",
        "description": "api.instructor.serializers",
        "peekOfCode": "class InstructorCreateSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Instructor\n        fields = (\n            'email', 'password'\n        )\n    def create(self, validated_data):\n        user = super().create(validated_data)\n        user.set_password(validated_data['password'])\n        user.save()",
        "detail": "api.instructor.serializers",
        "documentation": {}
    },
    {
        "label": "RegisterInstructor",
        "kind": 6,
        "importPath": "api.instructor.views",
        "description": "api.instructor.views",
        "peekOfCode": "class RegisterInstructor(APIView):\n    def post(self, request):\n        data = request.data\n        serializer = InstructorCreateSerializer(data = data)\n        if serializer.is_valid():\n            with transaction.atomic():\n                serializer.save()\n                email = serializer.validated_data['email']\n                otp = Otp.create_otp(email)\n                return Response({'message': \"Successfully register, please validate token\"}, status=status.HTTP_201_CREATED)",
        "detail": "api.instructor.views",
        "documentation": {}
    },
    {
        "label": "StudentCreateSerializer",
        "kind": 6,
        "importPath": "api.students.serializers",
        "description": "api.students.serializers",
        "peekOfCode": "class StudentCreateSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Student\n        fields = (\n            'email', 'password'\n        )\n    def create(self, validated_data):\n        user = super().create(validated_data)\n        user.set_password(validated_data['password'])\n        user.save()",
        "detail": "api.students.serializers",
        "documentation": {}
    },
    {
        "label": "TestAPIView",
        "kind": 6,
        "importPath": "api.students.views",
        "description": "api.students.views",
        "peekOfCode": "class TestAPIView(APIView):\n    def get(self, request):\n        data = {\n            'message': 'This is a test API view.',\n            'status': 'success'\n        }\n        return JsonResponse(data)\nclass RegisterStudent(APIView):\n    def post(self, request):\n        data = request.data",
        "detail": "api.students.views",
        "documentation": {}
    },
    {
        "label": "RegisterStudent",
        "kind": 6,
        "importPath": "api.students.views",
        "description": "api.students.views",
        "peekOfCode": "class RegisterStudent(APIView):\n    def post(self, request):\n        data = request.data\n        serializer = StudentCreateSerializer(data = data)\n        if serializer.is_valid():\n            with transaction.atomic():\n                serializer.save()\n                email = serializer.validated_data['email']\n                otp = Otp.create_otp(email)\n                return Response({'message': \"Successfully register, please validate token\"}, status=status.HTTP_201_CREATED)",
        "detail": "api.students.views",
        "documentation": {}
    },
    {
        "label": "router",
        "kind": 5,
        "importPath": "api.urls",
        "description": "api.urls",
        "peekOfCode": "router = routers.DefaultRouter()\nrouter.register('course', CourseViewSet, basename=\"course\"),\nrouter.register('chapter', ChapterViewSet, basename=\"chapter\"),\nrouter.register('lesson', LessonViewSet, basename=\"lesson\"),\nurlpatterns = [\n    path('', include(router.urls)),\n    path('test/', TestAPIView.as_view(), name='test_api_view'),\n    # student registration\n    path('register-student/', RegisterStudent.as_view(), name='register_student'),\n    # instructor registration",
        "detail": "api.urls",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "api.urls",
        "description": "api.urls",
        "peekOfCode": "urlpatterns = [\n    path('', include(router.urls)),\n    path('test/', TestAPIView.as_view(), name='test_api_view'),\n    # student registration\n    path('register-student/', RegisterStudent.as_view(), name='register_student'),\n    # instructor registration\n    path('register-instructor/', RegisterInstructor.as_view(), name='register_instructor'),\n    # token validation\n    path('token-validation/', OtpValidation.as_view(), name='token-validation'),\n    # login",
        "detail": "api.urls",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "apps.common.migrations.0001_initial",
        "description": "apps.common.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n        (\"auth\", \"0012_alter_user_first_name_max_length\"),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name=\"CustomUser\",\n            fields=[\n                (",
        "detail": "apps.common.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "apps.common.migrations.0002_alter_customuser_is_active",
        "description": "apps.common.migrations.0002_alter_customuser_is_active",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        (\"common\", \"0001_initial\"),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name=\"customuser\",\n            name=\"is_active\",\n            field=models.BooleanField(default=False),\n        ),",
        "detail": "apps.common.migrations.0002_alter_customuser_is_active",
        "documentation": {}
    },
    {
        "label": "CommonConfig",
        "kind": 6,
        "importPath": "apps.common.apps",
        "description": "apps.common.apps",
        "peekOfCode": "class CommonConfig(AppConfig):\n    default_auto_field = \"django.db.models.BigAutoField\"\n    name = \"apps.common\"",
        "detail": "apps.common.apps",
        "documentation": {}
    },
    {
        "label": "TimeStampAndVisibility",
        "kind": 6,
        "importPath": "apps.common.models",
        "description": "apps.common.models",
        "peekOfCode": "class TimeStampAndVisibility(models.Model):\n    created_at = models.DateTimeField(auto_now_add=True)\n    updated_at = models.DateTimeField(auto_now=True)\n    active = models.BooleanField(default=False)\n    alias = models.UUIDField(default=uuid.uuid4, editable=False, unique=True)\n    class Meta:\n        abstract = True\nclass CustomUser(AbstractUser):\n    email = models.EmailField(verbose_name='Email Address', unique=True)\n    created_by = models.ForeignKey('self', on_delete=models.SET_NULL, null=True, blank=True, related_name='created_student')",
        "detail": "apps.common.models",
        "documentation": {}
    },
    {
        "label": "CustomUser",
        "kind": 6,
        "importPath": "apps.common.models",
        "description": "apps.common.models",
        "peekOfCode": "class CustomUser(AbstractUser):\n    email = models.EmailField(verbose_name='Email Address', unique=True)\n    created_by = models.ForeignKey('self', on_delete=models.SET_NULL, null=True, blank=True, related_name='created_student')\n    updated_by = models.ForeignKey('self', on_delete=models.SET_NULL, null=True, blank=True, related_name='updated_student')\n    created_at = models.DateTimeField(auto_now_add=True)\n    updated_at = models.DateTimeField(auto_now=True)\n    is_active = models.BooleanField(default=False)\n    def save(self, *args, **kwargs):\n        if not self.username:\n            self.username = self.email",
        "detail": "apps.common.models",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "apps.course.migrations.0001_initial",
        "description": "apps.course.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n        (\"instructor\", \"0001_initial\"),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name=\"Category\",\n            fields=[\n                (",
        "detail": "apps.course.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "apps.course.migrations.0002_lesson_chapter",
        "description": "apps.course.migrations.0002_lesson_chapter",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        (\"course\", \"0001_initial\"),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name=\"lesson\",\n            name=\"chapter\",\n            field=models.ForeignKey(\n                blank=True,",
        "detail": "apps.course.migrations.0002_lesson_chapter",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "apps.course.migrations.0003_alter_chapter_slug_alter_course_slug_and_more",
        "description": "apps.course.migrations.0003_alter_chapter_slug_alter_course_slug_and_more",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        (\"course\", \"0002_lesson_chapter\"),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name=\"chapter\",\n            name=\"slug\",\n            field=models.SlugField(blank=True, null=True, unique=True),\n        ),",
        "detail": "apps.course.migrations.0003_alter_chapter_slug_alter_course_slug_and_more",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "apps.course.migrations.0004_course_description",
        "description": "apps.course.migrations.0004_course_description",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        (\"course\", \"0003_alter_chapter_slug_alter_course_slug_and_more\"),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name=\"course\",\n            name=\"description\",\n            field=models.TextField(blank=True, null=True),\n        ),",
        "detail": "apps.course.migrations.0004_course_description",
        "documentation": {}
    },
    {
        "label": "CourseConfig",
        "kind": 6,
        "importPath": "apps.course.apps",
        "description": "apps.course.apps",
        "peekOfCode": "class CourseConfig(AppConfig):\n    default_auto_field = \"django.db.models.BigAutoField\"\n    name = \"apps.course\"",
        "detail": "apps.course.apps",
        "documentation": {}
    },
    {
        "label": "Category",
        "kind": 6,
        "importPath": "apps.course.models",
        "description": "apps.course.models",
        "peekOfCode": "class Category(TimeStampAndVisibility):\n    title = models.CharField(max_length=255)\n    slug = models.SlugField(unique=True)\n    def save(self, *args, **kwargs):\n        if not self.slug:\n            self.slug = slugify(self.title)\n        super().save(*args, **kwargs)\nclass Course(TimeStampAndVisibility):\n    title = models.CharField(max_length=255)\n    slug = models.SlugField(unique=True, null=True, blank=True)",
        "detail": "apps.course.models",
        "documentation": {}
    },
    {
        "label": "Course",
        "kind": 6,
        "importPath": "apps.course.models",
        "description": "apps.course.models",
        "peekOfCode": "class Course(TimeStampAndVisibility):\n    title = models.CharField(max_length=255)\n    slug = models.SlugField(unique=True, null=True, blank=True)\n    category = models.ForeignKey('Category', on_delete=SET_NULL, null=True, blank=True)\n    description = models.TextField(null=True, blank=True)\n    owner = models.ForeignKey(Instructor, on_delete=models.SET_NULL, null=True, blank=True, related_name='course_owner')\n    def save(self, *args, **kwargs):\n        if not self.slug:\n            self.slug = slugify(self.title)\n        super().save(*args, **kwargs)",
        "detail": "apps.course.models",
        "documentation": {}
    },
    {
        "label": "Chapter",
        "kind": 6,
        "importPath": "apps.course.models",
        "description": "apps.course.models",
        "peekOfCode": "class Chapter(TimeStampAndVisibility):\n    title = models.CharField(max_length=255)\n    slug = models.SlugField(unique=True, null=True, blank=True)\n    course = models.ForeignKey('Course', on_delete=models.SET_NULL, null=True, blank=True)\n    def save(self, *args, **kwargs):\n        if not self.slug:\n            self.slug = slugify(self.title)\n        super().save(*args, **kwargs)\nclass Lesson(TimeStampAndVisibility):\n    TYPE_CHOICES = [",
        "detail": "apps.course.models",
        "documentation": {}
    },
    {
        "label": "Lesson",
        "kind": 6,
        "importPath": "apps.course.models",
        "description": "apps.course.models",
        "peekOfCode": "class Lesson(TimeStampAndVisibility):\n    TYPE_CHOICES = [\n        (1, 'Content'),\n        (2, 'Quiz'),\n        (3, 'Assignment'),\n    ]\n    chapter = models.ForeignKey('Chapter', on_delete=models.SET_NULL, null=True, blank=True)\n    title = models.CharField(max_length=255)\n    slug = models.SlugField(unique=True, null=True, blank=True)\n    video = models.TextField()",
        "detail": "apps.course.models",
        "documentation": {}
    },
    {
        "label": "Quiz",
        "kind": 6,
        "importPath": "apps.course.models",
        "description": "apps.course.models",
        "peekOfCode": "class Quiz(TimeStampAndVisibility):\n    section = models.ForeignKey('Lesson', on_delete=models.SET_NULL, null=True, blank=True)\n    question = models.TextField()\n    correct_ans = models.IntegerField()\n    options = models.JSONField()\nclass Attachment(TimeStampAndVisibility):\n    section = models.ForeignKey('Lesson', on_delete=models.SET_NULL, null=True, blank=True)\n    file = models.FileField(upload_to='attachment')",
        "detail": "apps.course.models",
        "documentation": {}
    },
    {
        "label": "Attachment",
        "kind": 6,
        "importPath": "apps.course.models",
        "description": "apps.course.models",
        "peekOfCode": "class Attachment(TimeStampAndVisibility):\n    section = models.ForeignKey('Lesson', on_delete=models.SET_NULL, null=True, blank=True)\n    file = models.FileField(upload_to='attachment')",
        "detail": "apps.course.models",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "apps.instructor.migrations.0001_initial",
        "description": "apps.instructor.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n        (\"common\", \"0001_initial\"),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name=\"Instructor\",\n            fields=[\n                (",
        "detail": "apps.instructor.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "InstructorConfig",
        "kind": 6,
        "importPath": "apps.instructor.apps",
        "description": "apps.instructor.apps",
        "peekOfCode": "class InstructorConfig(AppConfig):\n    default_auto_field = \"django.db.models.BigAutoField\"\n    name = \"apps.instructor\"",
        "detail": "apps.instructor.apps",
        "documentation": {}
    },
    {
        "label": "Instructor",
        "kind": 6,
        "importPath": "apps.instructor.models",
        "description": "apps.instructor.models",
        "peekOfCode": "class Instructor(CustomUser):\n    def save(self, *args, **kwargs):\n        # Call the parent class's save() method\n        super().save(*args, **kwargs)\n        if not self.groups.filter(name='instructor').exists():\n        # Get or create the desired group\n            group, created = Group.objects.get_or_create(name='instructor')\n            # Add the user to the group\n            self.groups.add(group)",
        "detail": "apps.instructor.models",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "apps.otp.migrations.0001_initial",
        "description": "apps.otp.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = []\n    operations = [\n        migrations.CreateModel(\n            name=\"Otp\",\n            fields=[\n                (\n                    \"id\",\n                    models.BigAutoField(",
        "detail": "apps.otp.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "OtpConfig",
        "kind": 6,
        "importPath": "apps.otp.apps",
        "description": "apps.otp.apps",
        "peekOfCode": "class OtpConfig(AppConfig):\n    default_auto_field = \"django.db.models.BigAutoField\"\n    name = \"apps.otp\"",
        "detail": "apps.otp.apps",
        "documentation": {}
    },
    {
        "label": "Otp",
        "kind": 6,
        "importPath": "apps.otp.models",
        "description": "apps.otp.models",
        "peekOfCode": "class Otp(TimeStampAndVisibility):\n    email = models.EmailField(unique=True)\n    attempt = models.IntegerField(default=0)\n    is_used = models.BooleanField(default=False)\n    otp = models.CharField(max_length=40, editable=False)\n    def __str__(self):\n        return \"{} - {}\".format(self.email, self.otp)\n    @classmethod\n    def create_otp(cls, email):\n        otp_value = cls.generate_otp()",
        "detail": "apps.otp.models",
        "documentation": {}
    },
    {
        "label": "QuizConfig",
        "kind": 6,
        "importPath": "apps.quiz.apps",
        "description": "apps.quiz.apps",
        "peekOfCode": "class QuizConfig(AppConfig):\n    default_auto_field = \"django.db.models.BigAutoField\"\n    name = \"apps.quiz\"",
        "detail": "apps.quiz.apps",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "apps.student.migrations.0001_initial",
        "description": "apps.student.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n        (\"common\", \"0001_initial\"),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name=\"Student\",\n            fields=[\n                (",
        "detail": "apps.student.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "StudentConfig",
        "kind": 6,
        "importPath": "apps.student.apps",
        "description": "apps.student.apps",
        "peekOfCode": "class StudentConfig(AppConfig):\n    default_auto_field = \"django.db.models.BigAutoField\"\n    name = \"apps.student\"",
        "detail": "apps.student.apps",
        "documentation": {}
    },
    {
        "label": "Student",
        "kind": 6,
        "importPath": "apps.student.models",
        "description": "apps.student.models",
        "peekOfCode": "class Student(CustomUser):\n    def save(self, *args, **kwargs):\n        # Call the parent class's save() method\n        super().save(*args, **kwargs)\n        if not self.groups.filter(name='student').exists():\n        # Get or create the desired group\n            group, created = Group.objects.get_or_create(name='student')\n            # Add the user to the group\n            self.groups.add(group)",
        "detail": "apps.student.models",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "heliopolis.asgi",
        "description": "heliopolis.asgi",
        "peekOfCode": "application = get_asgi_application()",
        "detail": "heliopolis.asgi",
        "documentation": {}
    },
    {
        "label": "BASE_DIR",
        "kind": 5,
        "importPath": "heliopolis.settings",
        "description": "heliopolis.settings",
        "peekOfCode": "BASE_DIR = Path(__file__).resolve().parent.parent\n# Quick-start development settings - unsuitable for production\n# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/\n# SECURITY WARNING: keep the secret key used in production secret!\nSECRET_KEY = \"django-insecure-xyb9!($amj6_^((50yjo3(zdlvo%b2eygn$y(c-2fzrpqwj3n-\"\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [",
        "detail": "heliopolis.settings",
        "documentation": {}
    },
    {
        "label": "SECRET_KEY",
        "kind": 5,
        "importPath": "heliopolis.settings",
        "description": "heliopolis.settings",
        "peekOfCode": "SECRET_KEY = \"django-insecure-xyb9!($amj6_^((50yjo3(zdlvo%b2eygn$y(c-2fzrpqwj3n-\"\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    \"django.contrib.admin\",\n    \"django.contrib.auth\",\n    \"django.contrib.contenttypes\",\n    \"django.contrib.sessions\",",
        "detail": "heliopolis.settings",
        "documentation": {}
    },
    {
        "label": "DEBUG",
        "kind": 5,
        "importPath": "heliopolis.settings",
        "description": "heliopolis.settings",
        "peekOfCode": "DEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    \"django.contrib.admin\",\n    \"django.contrib.auth\",\n    \"django.contrib.contenttypes\",\n    \"django.contrib.sessions\",\n    \"django.contrib.messages\",\n    \"django.contrib.staticfiles\",",
        "detail": "heliopolis.settings",
        "documentation": {}
    },
    {
        "label": "ALLOWED_HOSTS",
        "kind": 5,
        "importPath": "heliopolis.settings",
        "description": "heliopolis.settings",
        "peekOfCode": "ALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    \"django.contrib.admin\",\n    \"django.contrib.auth\",\n    \"django.contrib.contenttypes\",\n    \"django.contrib.sessions\",\n    \"django.contrib.messages\",\n    \"django.contrib.staticfiles\",\n    #3rd party apps",
        "detail": "heliopolis.settings",
        "documentation": {}
    },
    {
        "label": "INSTALLED_APPS",
        "kind": 5,
        "importPath": "heliopolis.settings",
        "description": "heliopolis.settings",
        "peekOfCode": "INSTALLED_APPS = [\n    \"django.contrib.admin\",\n    \"django.contrib.auth\",\n    \"django.contrib.contenttypes\",\n    \"django.contrib.sessions\",\n    \"django.contrib.messages\",\n    \"django.contrib.staticfiles\",\n    #3rd party apps\n    'rest_framework.authtoken',\n    'corsheaders',",
        "detail": "heliopolis.settings",
        "documentation": {}
    },
    {
        "label": "MIDDLEWARE",
        "kind": 5,
        "importPath": "heliopolis.settings",
        "description": "heliopolis.settings",
        "peekOfCode": "MIDDLEWARE = [\n    \"django.middleware.security.SecurityMiddleware\",\n    \"django.contrib.sessions.middleware.SessionMiddleware\",\n    \"django.middleware.common.CommonMiddleware\",\n    \"django.middleware.csrf.CsrfViewMiddleware\",\n    \"django.contrib.auth.middleware.AuthenticationMiddleware\",\n    \"django.contrib.messages.middleware.MessageMiddleware\",\n    \"django.middleware.clickjacking.XFrameOptionsMiddleware\",\n    \"corsheaders.middleware.CorsMiddleware\",\n]",
        "detail": "heliopolis.settings",
        "documentation": {}
    },
    {
        "label": "CORS_ALLOW_ALL_ORIGINS",
        "kind": 5,
        "importPath": "heliopolis.settings",
        "description": "heliopolis.settings",
        "peekOfCode": "CORS_ALLOW_ALL_ORIGINS = True\nROOT_URLCONF = \"heliopolis.urls\"\nAUTH_USER_MODEL = 'common.CustomUser'\nTEMPLATES = [\n    {\n        \"BACKEND\": \"django.template.backends.django.DjangoTemplates\",\n        \"DIRS\": [],\n        \"APP_DIRS\": True,\n        \"OPTIONS\": {\n            \"context_processors\": [",
        "detail": "heliopolis.settings",
        "documentation": {}
    },
    {
        "label": "ROOT_URLCONF",
        "kind": 5,
        "importPath": "heliopolis.settings",
        "description": "heliopolis.settings",
        "peekOfCode": "ROOT_URLCONF = \"heliopolis.urls\"\nAUTH_USER_MODEL = 'common.CustomUser'\nTEMPLATES = [\n    {\n        \"BACKEND\": \"django.template.backends.django.DjangoTemplates\",\n        \"DIRS\": [],\n        \"APP_DIRS\": True,\n        \"OPTIONS\": {\n            \"context_processors\": [\n                \"django.template.context_processors.debug\",",
        "detail": "heliopolis.settings",
        "documentation": {}
    },
    {
        "label": "AUTH_USER_MODEL",
        "kind": 5,
        "importPath": "heliopolis.settings",
        "description": "heliopolis.settings",
        "peekOfCode": "AUTH_USER_MODEL = 'common.CustomUser'\nTEMPLATES = [\n    {\n        \"BACKEND\": \"django.template.backends.django.DjangoTemplates\",\n        \"DIRS\": [],\n        \"APP_DIRS\": True,\n        \"OPTIONS\": {\n            \"context_processors\": [\n                \"django.template.context_processors.debug\",\n                \"django.template.context_processors.request\",",
        "detail": "heliopolis.settings",
        "documentation": {}
    },
    {
        "label": "TEMPLATES",
        "kind": 5,
        "importPath": "heliopolis.settings",
        "description": "heliopolis.settings",
        "peekOfCode": "TEMPLATES = [\n    {\n        \"BACKEND\": \"django.template.backends.django.DjangoTemplates\",\n        \"DIRS\": [],\n        \"APP_DIRS\": True,\n        \"OPTIONS\": {\n            \"context_processors\": [\n                \"django.template.context_processors.debug\",\n                \"django.template.context_processors.request\",\n                \"django.contrib.auth.context_processors.auth\",",
        "detail": "heliopolis.settings",
        "documentation": {}
    },
    {
        "label": "WSGI_APPLICATION",
        "kind": 5,
        "importPath": "heliopolis.settings",
        "description": "heliopolis.settings",
        "peekOfCode": "WSGI_APPLICATION = \"heliopolis.wsgi.application\"\n# Database\n# https://docs.djangoproject.com/en/4.2/ref/settings/#databases\nDATABASES = {\n    \"default\": {\n        \"ENGINE\": \"django.db.backends.sqlite3\",\n        \"NAME\": BASE_DIR / \"db.sqlite3\",\n    }\n}\n# Password validation",
        "detail": "heliopolis.settings",
        "documentation": {}
    },
    {
        "label": "DATABASES",
        "kind": 5,
        "importPath": "heliopolis.settings",
        "description": "heliopolis.settings",
        "peekOfCode": "DATABASES = {\n    \"default\": {\n        \"ENGINE\": \"django.db.backends.sqlite3\",\n        \"NAME\": BASE_DIR / \"db.sqlite3\",\n    }\n}\n# Password validation\n# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators\nAUTH_PASSWORD_VALIDATORS = [\n    {",
        "detail": "heliopolis.settings",
        "documentation": {}
    },
    {
        "label": "AUTH_PASSWORD_VALIDATORS",
        "kind": 5,
        "importPath": "heliopolis.settings",
        "description": "heliopolis.settings",
        "peekOfCode": "AUTH_PASSWORD_VALIDATORS = [\n    {\n        \"NAME\": \"django.contrib.auth.password_validation.UserAttributeSimilarityValidator\",\n    },\n    {\n        \"NAME\": \"django.contrib.auth.password_validation.MinimumLengthValidator\",\n    },\n    {\n        \"NAME\": \"django.contrib.auth.password_validation.CommonPasswordValidator\",\n    },",
        "detail": "heliopolis.settings",
        "documentation": {}
    },
    {
        "label": "DEFAULT_AUTHENTICATION_CLASSES",
        "kind": 5,
        "importPath": "heliopolis.settings",
        "description": "heliopolis.settings",
        "peekOfCode": "DEFAULT_AUTHENTICATION_CLASSES = (\n    'rest_framework.authentication.TokenAuthentication',\n)\nREST_FRAMEWORK = {\n    # 'DEFAULT_PERMISSION_CLASSES': [\n    #     'rest_framework.permissions.DjangoModelPermissionsOrAnonReadOnly'\n    # ],\n    'DEFAULT_AUTHENTICATION_CLASSES': DEFAULT_AUTHENTICATION_CLASSES,\n    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.LimitOffsetPagination',\n    'PAGE_SIZE': 100",
        "detail": "heliopolis.settings",
        "documentation": {}
    },
    {
        "label": "REST_FRAMEWORK",
        "kind": 5,
        "importPath": "heliopolis.settings",
        "description": "heliopolis.settings",
        "peekOfCode": "REST_FRAMEWORK = {\n    # 'DEFAULT_PERMISSION_CLASSES': [\n    #     'rest_framework.permissions.DjangoModelPermissionsOrAnonReadOnly'\n    # ],\n    'DEFAULT_AUTHENTICATION_CLASSES': DEFAULT_AUTHENTICATION_CLASSES,\n    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.LimitOffsetPagination',\n    'PAGE_SIZE': 100\n}\n# Internationalization\n# https://docs.djangoproject.com/en/4.2/topics/i18n/",
        "detail": "heliopolis.settings",
        "documentation": {}
    },
    {
        "label": "LANGUAGE_CODE",
        "kind": 5,
        "importPath": "heliopolis.settings",
        "description": "heliopolis.settings",
        "peekOfCode": "LANGUAGE_CODE = \"en-us\"\nTIME_ZONE = \"UTC\"\nUSE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.2/howto/static-files/\nSTATIC_URL = \"static/\"\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = \"django.db.models.BigAutoField\"",
        "detail": "heliopolis.settings",
        "documentation": {}
    },
    {
        "label": "TIME_ZONE",
        "kind": 5,
        "importPath": "heliopolis.settings",
        "description": "heliopolis.settings",
        "peekOfCode": "TIME_ZONE = \"UTC\"\nUSE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.2/howto/static-files/\nSTATIC_URL = \"static/\"\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = \"django.db.models.BigAutoField\"",
        "detail": "heliopolis.settings",
        "documentation": {}
    },
    {
        "label": "USE_I18N",
        "kind": 5,
        "importPath": "heliopolis.settings",
        "description": "heliopolis.settings",
        "peekOfCode": "USE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.2/howto/static-files/\nSTATIC_URL = \"static/\"\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = \"django.db.models.BigAutoField\"",
        "detail": "heliopolis.settings",
        "documentation": {}
    },
    {
        "label": "USE_TZ",
        "kind": 5,
        "importPath": "heliopolis.settings",
        "description": "heliopolis.settings",
        "peekOfCode": "USE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.2/howto/static-files/\nSTATIC_URL = \"static/\"\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = \"django.db.models.BigAutoField\"",
        "detail": "heliopolis.settings",
        "documentation": {}
    },
    {
        "label": "STATIC_URL",
        "kind": 5,
        "importPath": "heliopolis.settings",
        "description": "heliopolis.settings",
        "peekOfCode": "STATIC_URL = \"static/\"\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = \"django.db.models.BigAutoField\"",
        "detail": "heliopolis.settings",
        "documentation": {}
    },
    {
        "label": "DEFAULT_AUTO_FIELD",
        "kind": 5,
        "importPath": "heliopolis.settings",
        "description": "heliopolis.settings",
        "peekOfCode": "DEFAULT_AUTO_FIELD = \"django.db.models.BigAutoField\"",
        "detail": "heliopolis.settings",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "heliopolis.urls",
        "description": "heliopolis.urls",
        "peekOfCode": "urlpatterns = [\n    path(\"admin/\", admin.site.urls),\n    path('api/v1/', include('api.urls')),\n]",
        "detail": "heliopolis.urls",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "heliopolis.wsgi",
        "description": "heliopolis.wsgi",
        "peekOfCode": "application = get_wsgi_application()",
        "detail": "heliopolis.wsgi",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "manage",
        "description": "manage",
        "peekOfCode": "def main():\n    \"\"\"Run administrative tasks.\"\"\"\n    os.environ.setdefault(\"DJANGO_SETTINGS_MODULE\", \"heliopolis.settings\")\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and \"\n            \"available on your PYTHONPATH environment variable? Did you \"\n            \"forget to activate a virtual environment?\"",
        "detail": "manage",
        "documentation": {}
    }
]